# Main task list. These ensure Tor is installed, running, and current.
---
- name: Register custom Onion configuration.
  when:
    - onion_services is defined
    - onion_services_overrides is defined
  block:
    - name: Make list of overridden Onion services.
      include_tasks: tasks/configure-onions.yaml
      loop: "{{ onion_services | product(onion_services_overrides) | list }}"
      loop_control:
        index_var: i
        label: item.name
    - name: Reset Onion service configuration from overrides list.
      set_fact:
        onion_services: "{{ overridden_onion_services }}"

# Place AppArmor configuration on filesystem first so that it is
# enforced by the time Tor starts after being built.
- name: Install AppArmor profile customizations.
  import_tasks: apparmor.yaml

- name: Build Tor.
  include_tasks: "build-{{ ansible_facts.os_family | default('Debian') | lower }}.yaml"
  tags:
    - tor-build

- name: Harden Tor with Vanguards.
  when: tor_onion_services_vanguards is defined
  import_tasks: harden-vanguards.yaml

- name: Set up Onion services.
  import_tasks: onion-services.yaml

- name: Set up Onion services client.
  import_tasks: onion-services-client.yaml

- name: Write main Tor configuration file.
  template:
    src: torrc.j2
    dest: /etc/tor/torrc
    owner: debian-tor
    group: debian-tor
    mode: "600"
    # TODO: Failed validation...why?
    #validate: "tor --verify-config -f %s"

- name: Reload Tor to ensure current torrc is used.
  service:
    name: tor
    state: reloaded
    enabled: true
  changed_when: false

- name: Supply Onion service client keys.
  when: onion_services is defined
  import_tasks: onion-service-client-keys.yaml

- name: Perform Vanguards setup.
  when: tor_onion_services_vanguards is defined
  import_tasks: main-vanguards.yaml

- name: Backup Onion service secrets.
  when: tor_onion_services_backup_dir is defined
  import_tasks: backup-locally.yaml
  tags:
    - tor-backup
