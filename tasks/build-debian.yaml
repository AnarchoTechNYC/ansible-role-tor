# Tasks for building Tor on a Debian-derived system.
---
- name: Install Tor dependencies.
  package:
    name: "{{ item }}"
  loop:
    - apt-transport-https
    - dirmngr

- name: Install the Tor Project's GPG public key.
  apt_key:
    # We were using the SKS Keyservers for this, but now we reliably
    # get "packet too large" errors. Maybe someone has made the Tor
    # GPG key unimportable, ala this bug?
    # https://bitbucket.org/skskeyserver/sks-keyserver/issues/57/anyone-can-make-any-pgp-key-unimportable
    #keyserver: pool.sks-keyservers.net
    id: A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89
    data: "{{ lookup('file', '../files/tor-project-openpgp-key.asc') }}"
    state: present

- name: Add Tor Project's package repositories.
  apt_repository:
    repo: "{{ item }}"
    state: present
    mode: "0644"
    validate_certs: true
  loop:
    - "deb https://deb.torproject.org/torproject.org {{ ansible_facts.distribution_release | default('stretch') }} main"
    - "deb-src https://deb.torproject.org/torproject.org {{ ansible_facts.distribution_release | default('stretch') }} main"

- name: Check Tor version.
  become: false
  check_mode: false
  tags:
    - tor-build
  block:
    - name: Get installed Tor version.
      register: my_tor_version
      shell: "tor --version | cut -d ' ' -f 3"
      changed_when: false

    - name: Get repository Tor version.
      register: repo_tor_version
      shell: "apt show tor 2>/dev/null | grep ^Version: | cut -d ' ' -f 2"
      changed_when: false

- name: Build and install updated Tor from source.
  # When my_tor_version.stdout is the empty string, there is no Tor installed.
  when: my_tor_version.stdout == "" or my_tor_version.stdout is version(repo_tor_version.stdout.split('-')[0], '<')
  block:
    - name: Install Tor build dependencies.
      apt:
        name: "{{ packages }}"
        state: present
        install_recommends: false
      vars:
        packages:
          - build-essential
          - fakeroot
          - devscripts
      tags:
        - tor-build

    - name: Build Tor dependencies.
      apt:
        name: tor
        state: build-dep
      tags:
        - tor-build

    - name: Drop unnecessary privileges to build Tor from source.
      become: false
      block:
        - name: Create temporary directory for building Tor.
          check_mode: false
          file:
            path: "{{ tor_package_build_dir }}"
            state: directory
            mode: "700"
          tags:
            - tor-build

        - name: Build Tor from source.
          shell: "apt source tor; cd tor-*; debuild -rfakeroot -uc -us; cd ..;"
          args:
            chdir: "{{ tor_package_build_dir | quote }}"
            creates: "tor_*.orig.tar.gz"
          tags:
            - tor-build

        - name: Move newly built Tor packages to predictable names.
          shell: |
            mv {{ tor_package_build_dir | quote }}/tor_*.deb {{ tor_package_build_dir | quote }}/tor_justbuilt.deb
            mv {{ tor_package_build_dir | quote }}/tor-geoipdb_*.deb {{ tor_package_build_dir | quote }}/tor-geoipdb_justbuilt.deb
          args:
            chdir: "{{ tor_package_build_dir | quote }}"
            creates: "tor_justbuilt.deb"
          tags:
            - tor-build

    - name: Install newly built Tor packages.
      when: not ansible_check_mode
      apt:
        deb: "{{ item }}"
      loop:
        - "{{ tor_package_build_dir }}/tor_justbuilt.deb"
        - "{{ tor_package_build_dir }}/tor-geoipdb_justbuilt.deb"

    - name: Remove temporary directory for building Tor.
      check_mode: false
      file:
        path: "{{ tor_package_build_dir }}"
        state: absent
