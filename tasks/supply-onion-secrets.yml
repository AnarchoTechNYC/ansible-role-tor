---
- name: Decrypt Onion service secret file.
  when: tor_onion_services_backup_password is defined
  no_log: true
  become: false
  local_action:
    module: expect
    command: "ansible-vault decrypt --vault-id {{ tor_onion_services_backup_vault_id | default('') | quote }}@prompt {{ tor_onion_services_backup_dir | quote }}/{{ inventory_hostname | quote }}{{ tor_onion_services_dir | quote }}/{{ item.name | quote }}/{{ secret_file }}"
    responses:
      password: "{{ tor_onion_services_backup_password }}"

- name: Copy Onion service secret file.
  copy:
    src: "{{ item[secret_file + '_file'] }}"
    dest: "{{ tor_onion_services_dir }}/{{ item.name }}/{{ secret_file }}"
    owner: debian-tor
    group: debian-tor
    mode: "600"

- name: Re-encrypt Onion service secret file.
  when: tor_onion_services_backup_password is defined
  no_log: true
  become: false
  local_action:
    module: expect
    command: "ansible-vault encrypt --vault-id {{ tor_onion_services_backup_vault_id | default('') | quote }}@prompt {{ tor_onion_services_backup_dir | quote }}/{{ inventory_hostname | quote }}{{ tor_onion_services_dir | quote }}/{{ item.name | quote }}/{{ secret_file }}"
    responses:
      password: "{{ tor_onion_services_backup_password }}"
